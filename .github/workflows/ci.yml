name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  release:
    types: [ published ]

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linting
      run: npm run lint
      
    - name: Run tests
      run: npm test
      
    - name: Run tests with coverage
      run: npm run test:coverage
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  build:
    name: Build Extension
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build extension
      run: npm run build
      
    - name: Create extension package
      run: |
        mkdir -p dist
        zip -r dist/promptboost-extension.zip . \
          -x "node_modules/*" \
          -x ".git/*" \
          -x "tests/*" \
          -x "coverage/*" \
          -x "*.md" \
          -x ".github/*" \
          -x "package*.json" \
          -x ".eslintrc*" \
          -x "jest.config.js" \
          -x "babel.config.js"
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: extension-build
        path: dist/promptboost-extension.zip
        retention-days: 30

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level=moderate
      
    - name: Run CodeQL Analysis
      uses: github/codeql-action/init@v2
      with:
        languages: javascript
        
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2

  compatibility:
    name: Browser Compatibility
    runs-on: ubuntu-latest
    needs: test
    
    strategy:
      matrix:
        browser: [chrome, edge]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install browser dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y chromium-browser
        
    - name: Run browser compatibility tests
      run: npm run test:browser:${{ matrix.browser }}
      continue-on-error: true

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [test, build, security]
    if: github.event_name == 'release' && github.event.action == 'published'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build extension
      run: npm run build
      
    - name: Create release package
      run: |
        mkdir -p release
        zip -r release/promptboost-${{ github.event.release.tag_name }}.zip . \
          -x "node_modules/*" \
          -x ".git/*" \
          -x "tests/*" \
          -x "coverage/*" \
          -x "*.md" \
          -x ".github/*" \
          -x "package*.json" \
          -x ".eslintrc*" \
          -x "jest.config.js" \
          -x "babel.config.js"
      
    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./release/promptboost-${{ github.event.release.tag_name }}.zip
        asset_name: promptboost-${{ github.event.release.tag_name }}.zip
        asset_content_type: application/zip

  notify:
    name: Notify
    runs-on: ubuntu-latest
    needs: [test, build, security]
    if: always()
    
    steps:
    - name: Notify on success
      if: needs.test.result == 'success' && needs.build.result == 'success' && needs.security.result == 'success'
      run: echo "✅ All checks passed successfully!"
      
    - name: Notify on failure
      if: needs.test.result == 'failure' || needs.build.result == 'failure' || needs.security.result == 'failure'
      run: |
        echo "❌ Some checks failed:"
        echo "Test: ${{ needs.test.result }}"
        echo "Build: ${{ needs.build.result }}"
        echo "Security: ${{ needs.security.result }}"
